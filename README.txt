Γενική υλοποίηση:
Ο διερμηνέας, αφού ανοίξει το αρχειο, διαβάζει μία μία τις γραμμές του ipl αρχείου και διαχωρίζει τις λέξεις τοποθετώντας τα substrings σε tokens, τα οποία έπειτα
φυλάει σε εναν πίνακα. Έτσι, έχει να διαχειριστεί από 0 έως 5 tokens ανά γραμμή, τα οποία και ελέγχει.
Οι μεταβλητές φυλάσσονται σε μια απλά συνδεδεμένη λίστα, στης οποίας το τέλος δημιουργείται νέος κόμβος κάθε φορά που εμφανίζεται νέα μεταβλητή.
Τα βασικά κομμάτια κώδικα της κάθε εντολής ipl βρίσκονται στο αρχείο ipli.c. Οι συναρτήσεις που αφορούν σε λίστες βρίσκονται στο αρχείο list.c το οποίο συνοδεύεται από
το αντίστοιχο header με τις κατάλληλες δηλώσεις. Οποιαδήποτε άλλη συνάρτηση που καλείται από τη main βρίσκεται στο functions.c με το αντίστοιχο header.

Εκτέλεση if/else και while:
Κάθε εντολή while (αντιστοιχα if) περιέχει κάποιες πληροφορίες απαραίτητες για τη διάκριση των εμφωλεύσεων, την κατάσταση της συνθήκης και την πραγματοποίηση των επαναλήψεων.
Αυτές αποθηκεύονται σε μια δομή blocknode η οποία τοποθετείται στην κεφαλη μιας λιστας while_list (αντιστοιχα if_list) και εχει μορφη LIFO. Με αυτο τον τροπο εχουν 
προτεραιοτητα οι πιο βαθιες εμφωλευσεις. Οι λιστες αυτες ελεγχονται απο τις συναρτησεις push και pop.
Ο διερμηνέας δεν μπορεί να διακρίνει λάθη ως προς την στοίχηση των εντολών εντός των while και if/else blocks.

